// set up a simple neutral simulation
initialize() 
{	// Nucleotide based WF model
	initializeSLiMOptions(nucleotideBased=T);
	initializeSLiMModelType('WF');
	initializeMutationRate(0);
	
	// m1 mutation type: overdominance
	// m2 mutation type: neutral
	defineConstant('Dco', runif(1, 1, 5));
	defineConstant('Sco', runif(1, 0, 0.25));
	initializeMutationType("m1", Dco, 'f', Sco);
	initializeMutationType("m2", 0.5, 'f', 0);
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m2, 1.0);
	initializeGenomicElementType('g2', m1, 1.0);
	initializeGenomicElementType('g3', m2, 1.0);
	// uniform chromosome of length 32079331 with uniform recombination
	initializeGenomicElement(g1, 0, 18479920);
	initializeGenomicElement(g2, 18479921, 18479922);
	initializeGenomicElement(g3, 18479923, 32079331);
	initializeRecombinationRate(1.71642e-08);
}

// create a population of 500 individuals
1 early() {
	sim.addSubpop("p1", 500);
}

// output samples of 10 genomes periodically, all fixed mutations at end
1000 late() { p1.outputSample(10); }
2000 late() { p1.outputSample(10); }
2000 late() { sim.outputFixedMutations(); }
